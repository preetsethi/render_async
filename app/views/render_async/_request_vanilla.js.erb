(function() {
  <% if turbolinks %>
  if (document.documentElement.hasAttribute("data-turbolinks-preview")) {
    return;
  }
  <% end %>

  var _makeRequest = function(currentRetryCount) {
    var request = new XMLHttpRequest();
    var asyncRequest = true;
    var SUCCESS = 200;
    var ERROR = 400;

    request.open('<%= method %>', '<%= path.html_safe %>', asyncRequest);

    var headers = <%= headers.to_json.html_safe %>;
    var csrfTokenElement = document.querySelector('meta[name="csrf-token"]')
    if (csrfTokenElement)
      headers['X-CSRF-Token'] = csrfTokenElement.content

    Object.keys(headers).map(function(key) {
      request.setRequestHeader(key, headers[key]);
    });

    request.onreadystatechange = function() {
      if (request.readyState === 4) {
        if (request.status >= SUCCESS && request.status < ERROR) {
          var container = document.getElementById('<%= container_id %>');
          <% if interval %>
          container.innerHTML = request.response;
          <% else %>
          container.outerHTML = request.response;
          <% end %>

          <% if event_name.present? %>
            var event = undefined;
            if (typeof(Event) === 'function') {
              event = new Event("<%= event_name %>");
            } else {
              event = document.createEvent('Event');
              event.initEvent('<%= event_name %>', true, true);
            }
            document.dispatchEvent(event);
          <% end %>
        } else {
          var skipErrorMessage = false;
          <% if retry_count > 0 %>
          skipErrorMessage = retry(currentRetryCount)
          <% end %>

          if (skipErrorMessage) return;

          var container = document.getElementById('<%= container_id %>');
          container.outerHTML = '<%= error_message.try(:html_safe) %>';

          <% if error_event_name.present? %>
            var event = undefined;
            if (typeof(Event) === 'function') {
              event = new Event("<%= error_event_name %>");
            } else {
              event = document.createEvent('Event');
              event.initEvent('<%= error_event_name %>', true, true);
            }
            document.dispatchEvent(event);
          <% end %>
        }
      }
    };

    var body = "<%= escape_javascript(data.to_s.html_safe) %>";
    request.send(body);
  };

  <% if retry_count > 0 %>
  var retry = function(currentRetryCount) {
    if (typeof(currentRetryCount) === 'number') {
      if (currentRetryCount >= <%= retry_count %>)
        return false;

      _makeRequest(currentRetryCount + 1);
      return true;
    }

    _makeRequest(1);
    return true;
  }
  <% end %>

  var _renderAsyncFunction = _makeRequest;

  var _interval;
  <% if interval %>
  var _renderAsyncFunction = function() {
    _makeRequest();
    _interval = setInterval(_makeRequest, <%= interval %>);
  }
  <% end %>

  <% if toggle %>
  var selectors = document.querySelectorAll('<%= toggle[:selector] %>');

  [...selectors].forEach(function(selector) {
    selector.addEventListener('<%= toggle[:event] || 'click' %>', function(event) {
      event.preventDefault();
      if (_interval) {
        clearInterval(_interval);
        _interval = undefined;
      } else {
        _renderAsyncFunction();
      }
    })
  });
  <% end %>

  <% if turbolinks && !toggle %>
  document.addEventListener("turbolinks:load", function (e) {
    e.target.removeEventListener(e.type, arguments.callee);
    _renderAsyncFunction();
  });
  <% elsif !toggle %>
  document.addEventListener("DOMContentLoaded", _renderAsyncFunction);
  <% end %>
})();
